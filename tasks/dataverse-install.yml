---
# dataverse/tasks/dataverse-install.yml

# version numbers changed on github. only used this because files were missing from install.zip
#- name: clone {{ dataverse.version }} from git. optimally replace install.zip with this.
#  git: repo=git://github.com/IQSS/dataverse.git dest=/tmp/dataverse_{{ dataverse.version }} version={{ dataverse.version }}
#       clone=yes depth=1 accept_hostkey=true

- name: run dataverse installer
  debug:
    msg: '##### DATAVERSE INSTALLER #####'

- include: dataverse-build.yml
  when: dataverse_branch != "release"

- name: fix perms on dataverse-war
  file: path=/tmp/dvinstall/dataverse.war mode=0644

- name: grab current copies of installer source
  get_url:
    url: 'https://raw.githubusercontent.com/IQSS/dataverse/develop/scripts/installer/{{ item }}'
    dest: '/tmp/dvinstall/{{ item }}'
    mode: '0755'
  with_items:
    - install.py
    - installConfig.py
    - installAppServer.py
    - installUtils.py
    - as-setup.sh
  #when: dataverse_branch != "release"

- name: grab api setup scripts as well
  get_url:
    url: 'https://raw.githubusercontent.com/IQSS/dataverse/develop/scripts/api/{{ item }}'
    dest: '/tmp/dvinstall/{{ item }}'
    mode: '0755'
  with_items:
    - setup-all.sh
    - setup-datasetfields.sh
    - setup-builtin-roles.sh
    - setup-identity-providers.sh
  #when: dataverse_branch != "release"

- name: set dataverse adminpass in setup-all
  lineinfile:
    path: /tmp/dvinstall/setup-all.sh
    regexp: '^DV_SU_PASSWORD'
    line: 'DV_SU_PASSWORD="{{ dataverse.adminpass }}"'

- name: bash aliases won't expand in non-interactive shells
  lineinfile:
    path: /tmp/dvinstall/as-setup.sh
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - { regexp: 'rserve_password_alias', line: '  ./asadmin $ASADMIN_OPTS create-jvm-options "\-Ddataverse.rserve.password=${RSERVE_PASS}"' }
    - { regexp: 'doi_password_alias', line: '  ./asadmin $ASADMIN_OPTS create-jvm-options "\-Ddoi.password=${DOI_PASSWORD}"' }
    - { regexp: 'db_password_alias', line: '  ./asadmin $ASADMIN_OPTS set "resources.jdbc-connection-pool.dvnDbPool.property.password=${DB_PASS}"' }

- name: ensure as-setup.sh is executable
  file:
    path: /tmp/dvinstall/as-setup.sh
    mode: 0755

- name: register default_config
  set_fact:
    default_config: '{{ dataverse.default.config }}'

- name: place default.config template
  template:
    src: default.config.j2
    dest: /tmp/dvinstall/default.config
    owner: root
    group: root
    mode: 0644
  when: default_config|length == 0

- name: place default.config
  copy:
    src: default.config
    dest: /tmp/dvinstall/default.config
    owner: '{{ dataverse.glassfish.user }}'
    group: '{{ dataverse.glassfish.group }}'
    mode: 0600
  when: default_config|length > 0

- include: jacoco-instrument.yml
  when: dataverse.jacoco.enabled == true and
        dataverse_repo != "release"

- name: allow installer write access
  file:
    path: /tmp/dvinstall
    owner: '{{ dataverse.glassfish.user }}'

- name: make backup copy of install.py, to know whether it changed and we need to patch it later
  copy:
    src: /tmp/dvinstall/install.py
    dest: /tmp/dvinstall/install.py.prev
    remote_src: true
  register: install_py # this will be marked changed if there was no install.py.prev and thus no previous install, or the downloaded is different from the previous

- name: copy install.py to install_ansible.py
  copy:
    src: /tmp/dvinstall/install.py
    dest: /tmp/dvinstall/install_ansible.py
    remote_src: true
  when: install_py.changed

- name: patch install_ansible.py so that it does not ask for password
  lineinfile:
    path: /tmp/dvinstall/install_ansible.py
    regexp: '^gfAdminLoginStatus'
    state: absent

- name: patch install_ansible.py for available jdbc driver version
  lineinfile:
    path: /tmp/dvinstall/install_ansible.py
    regexp: '^pgJdbcDriver '
    line: 'pgJdbcDriver = "postgresql-42.2.9.jar"'

- name: patch install_ansible.py so that it allows for java 11 also
  lineinfile:
    path: /tmp/dvinstall/install_ansible.py
    regexp: '^   if not re.search."1.8", java_version.:'
    line: '   if not (re.search("1.8", java_version) or re.search("11.", java_version)):'

- name: patch install_ansible.py so that it allows for java 11 also
  lineinfile:
    path: /tmp/dvinstall/install_ansible.py
    regexp: "^      sys.exit.\"Dataverse requires Java 1.8. Please install it, or make sure it's in your PATH, and try again\"."
    line: "      sys.exit(\"Dataverse requires Java 1.8 or 11. Please install it, or make sure it's in your PATH, and try again\")"

- name: calculate detaverse install necessity
  set_fact:
    need_dataverse_install: install_py.changed or dataverse_build_war.changed

- name: fire off installer
  shell:
    cmd: /usr/bin/python /tmp/dvinstall/install_ansible.py -f --config_file=default.config --noninteractive > /tmp/dvinstall/install.out 2>&1
    chdir: /tmp/dvinstall
  become: yes
  become_user: '{{ dataverse.glassfish.user }}'
  when: need_dataverse_install

# install.py doesn't currently log this output, nothing sensitive in install.out
#- name: negate need for password aliases
#  file:
#    name: /tmp/as-setup.out
#    mode: 0600
#  ignore_errors: yes
