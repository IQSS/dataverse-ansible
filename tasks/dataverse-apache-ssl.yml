---

- name: begin apache ssl task
  debug:
    msg: '##### APACHE/HTTPD SSL #####'

- name: are pems passed as group_vars?
  set_fact:
    use_pems: "{{ apache.ssl.pem.cert | default('', true) | trim != '' }}"

- include: dataverse-apache-ssl-pems.yml
  when: use_pems

- name: if we're not using pems, set filenames
  set_fact:
    apache_ssl_cert: '{{ apache.ssl.cert }}'
    apache_ssl_key: '{{ apache.ssl.key }}'
    apache_ssl_interm: '{{ apache.ssl.interm }}'
  when: use_pems == False

- name: copy ssl cert
  copy:
    src: '{{ apache.ssl.cert }}'
    dest: '/etc/pki/tls/certs/{{ apache.ssl.cert }}'
    owner: root
    group: root
    mode: 0644
  when:
   - ansible_os_family == "RedHat"
   - use_pems == False
   - not apache.ssl.remote_cert
   - apache.ssl.enabled
  notify: enable and restart apache

- name: copy ssl chain
  copy:
    src: '{{ apache.ssl.interm }}'
    dest: '/etc/pki/tls/certs/{{ apache.ssl.interm }}'
    owner: root
    group: root
    mode: 0644
    remote_src: '{{ apache.ssl.remote_cert }}'
  when:
   - ansible_os_family == "RedHat"
   - use_pems == False
   - not apache.ssl.remote_cert
   - apache.ssl.enabled
  notify: enable and restart apache

- name: copy ssl key
  copy:
    src: '{{ apache.ssl.key }}'
    dest: '/etc/pki/tls/private/{{ apache.ssl.key }}'
    owner: root
    group: root
    mode: 0400
    remote_src: '{{ apache.ssl.remote_cert }}'
  when:
   - ansible_os_family == "RedHat"
   - use_pems == False
   - not apache.ssl.remote_cert
   - apache.ssl.enabled
  notify: enable and restart apache

- name: install http redirect template
  template: src=http.redirect.conf.j2 dest="{{ apache_virtualhost_dir }}/http.redirect.conf"
        owner=root group=root mode=0644
  when: apache.ssl.enabled
  notify: enable and restart apache

- name: remove redirect conf if ssl is disabled
  file: path="{{ apache_virtualhost_dir }}/http.redirect.conf" state=absent
  when: not apache.ssl.enabled
  notify: enable and restart apache

- name: remove outdated ssl.conf
  file: path="{{ apache_virtualhost_dir }}/ssl.conf" state=absent
  notify: enable and restart apache

- name: decide what to do about apache ssl-related modules
  set_fact:
    ssl_modules_state: "{{ apache.ssl.enabled | ternary ('present', 'absent') }}"

- name: enable/diable apache ssl and rewrite mods on Debian
  apache2_module:
    state: "{{ ssl_modules_state }}"
    name: "{{ item }}"
    ignore_configcheck: true
  with_items:
    - ssl
    - rewrite
  when: ansible_os_family == "Debian"    ## CHECKME -- does this need to be Debian-specific?
  notify: enable and restart apache
